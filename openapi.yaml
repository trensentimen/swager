openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumentasi API Cloud Function - Trensentimen
  termsOfService: https://github.com/trensentimen/swagger
  contact:
    url: https://github.com/trensentimen
  license:
    name: trensentimen Package
    url: https://pkg.go.dev/github.com/trensentimen/be_trensen
  version: 1.0.11
externalDocs:
  description: Repository GCF
  url: https://github.com/trensentimen/cloud_functions
servers:
  - url: https://asia-southeast2-trens-project.cloudfunctions.net/
tags:
  - name: register
    description: register User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://trensentimen.my.id/register
  - name: login
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://trensentimen.my.id/login.html
  - name: topic
    description: Get Token and Authorize
paths:
  /register:
    post:
      tags:
        - register
      summary: Register Data User
      description: Register Data User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Register"
        "405":
          description: Invalid input
  /login:
    post:
      tags:
        - login
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "405":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
        # - Bearer: []
  /addTopic:
    post:
      tags:
        - topic
      summary: Add Topic
      description: Menambah Topik
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addTopic"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/addResponseTopic"
        "405":
          description: Invalid input
      security:
        - Bearer: []
  /getAllTopics:
    get:
      tags:
        - topic
      summary: Get All Topic
      description: Mendapatkan Semua Topik
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/getAll"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestEmptyBody"
        "405":
          description: Invalid input
      security:
        - Bearer: []
  /getTopic:
    get:
      tags:
        - topic
      summary: Get Topic
      description: Mendapatkan Topik
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/getTopic"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getResponseTopic"
        "405":
          description: Invalid input
      security:
        - Bearer: []
  /updateTopic:
    put:
      tags:
        - topic
      summary: Update Topic
      description: Memperbaharui Topik
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateTopic"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUpdateTopic"
        "405":
          description: Invalid input
      security:
        - Bearer: []
  /deleteTopic:
    delete:
      tags:
        - topic
      summary: Delete Topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteTopic"
      description: Menghapus Topik
      operationId: authService
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponseTopic"
        "405":
          description: Invalid input
      security:
        - Bearer: []
components:
  schemas:
    Register:
      type: object
      properties:
        name:
          type: string
          example: aryka
        email:
          type: string
          example: email@gmail.com
        password:
          type: string
          example: secret
        confirm password:
          type: string
          example: secret
          
    Login:
      type: object
      properties:
        email:
          type: string
          example: aryka@gmail.com
        password:
          type: secretpass

    LoginResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: login berhasil
        token:
          type: string
          example: abcd1234
    
    addTopic:
      type: object
      properties:
        topicname:
          type: string
          example: Pilpres
        source:
          type: object
          properties:
            source: 
              type: string
              example: twitter
            value: 
              type: string
              example: presiden 2024
            status:
              type: string
              example: pending
    RequestEmptyBody:
      type: string
    
    getTopic:
      type: object
      properties:
        id: 
          type: string
          example: 6549bae758638dd4f0137a11
    deleteTopic:
      type: object
      properties:
        id: 
          type: string
          example: 6549bae758638dd4f0137a11
    
    updateTopic:
      type: object
      required:
        - _id
        - topicname
        - source
      properties:
        _id:
          type: string
          example: "6549bae758638dd4f0137a11"
        topicname:
          type: string
          example: "pilpress"
        source:
          type: object
          required:
            - source
            - value
            - date_range
          properties:
            source:
              type: string
              example: "youtube"
            value:
              type: string
              example: "ytsdaufxqu76"
            date_range:
              type: string
              example: "source2"

    addResponseTopic:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: "Topik berhasil ditambahkan dengan nama: "
    
    getResponseTopic:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: "Data successfully retrieved"
        data:
          type: object
          properties:
            _id:
              type: string
              example: "6549bae758638dd4f0137a11"
            topicname:
              type: string
              example: "sapi"
            source:
              type: object
              properties:
                source:
                  type: string
                  example: "twitter"
                value:
                  type: string
                  example: "ytsdaufxqu76"
                date_range:
                  type: string
                  example: ""
            status:
              type: string
              example: ""

    getAllResponseTopics:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: "Data successfully retrieved"
        data:
          type: list
          example: [{ "id": "123456", "name": "pilpres", "topic": "presiden 2024" }, { "id": "123456", "name": "capres", "topic": "calon presiden" }]

    ResponseUpdateTopic:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: "Topic berhasil diupdate"
        data:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: "6549bae758638dd4f0137a11"
              topicname:
                type: string
                example: "pilpress"
              source:
                type: object
                properties:
                  source:
                    type: string
                    example: "youtube"
                  value:
                    type: string
                    example: "ytsdaufxqu76"
                  date_range:
                    type: string
                    example: "source2"
              status:
                type: string
                example: ""

    DeleteResponseTopic:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: "Topic berhasil dihapus"
        data:
          type: null
          example: null

  
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Auth"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Masukan token dengan `Bearer: ` contoh "Bearer abcde12345".